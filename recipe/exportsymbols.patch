diff --git a/CMakeLists.txt b/CMakeLists.txt
index f0887a8..a4098ea 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -625,8 +625,13 @@ configure_file(
 
 if(MSVC)
 add_definitions(-D_CRT_SECURE_NO_WARNINGS)
-endif()
+add_library(poppler SHARED ${poppler_SRCS} ${LINKER_SCRIPT})
+# so we can determine if to import/export symbols
+target_compile_definitions(poppler PRIVATE _COMPILING_POPPLER=1)
+set_target_properties(poppler PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS true)
+else()
 add_library(poppler ${poppler_SRCS} ${LINKER_SCRIPT})
+endif()
 if (OpenJPEG_FOUND)
   # check if we can remove this when we depend on newer openjpeg versions, 2.5 seems fixed
   # target openjp2 may lack interface include directories
diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index 4885145..c410304 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -23,6 +23,14 @@ set(poppler_cpp_SRCS
   poppler-version.cpp
 )
 
+# From https://gitlab.freedesktop.org/poppler/poppler/-/merge_requests/672
+if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
+    # Both poppler and poppler-cpp export a class extending std::string (GooString and poppler::ustring)
+    # Adding `/FORCE:MULTIPLE` avoids the following link error:
+    # `LNK2005 "public: class std::basic_string<char, ...>::assign(...)" already defined in poppler-image.obj`
+    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /FORCE:MULTIPLE")
+endif()
+
 add_library(poppler-cpp ${poppler_cpp_SRCS})
 generate_export_header(poppler-cpp BASE_NAME poppler-cpp EXPORT_FILE_NAME "${CMAKE_CURRENT_BINARY_DIR}/poppler_cpp_export.h")
 set_target_properties(poppler-cpp PROPERTIES VERSION 0.11.0 SOVERSION 0)
diff --git a/poppler/GlobalParams.h b/poppler/GlobalParams.h
index 7cdd371..6f012d0 100644
--- a/poppler/GlobalParams.h
+++ b/poppler/GlobalParams.h
@@ -65,7 +65,14 @@ class SysFontList;
 //------------------------------------------------------------------------
 
 // The global parameters object.
-extern std::unique_ptr<GlobalParams> POPPLER_PRIVATE_EXPORT globalParams;
+#ifdef _COMPILING_POPPLER
+// cmake's WINDOWS_EXPORT_ALL_SYMBOLS doesn't extend to data unfortunately
+// so we must to this by hand
+extern __declspec(dllexport) std::unique_ptr<GlobalParams> globalParams;
+#else
+extern __declspec(dllimport) std::unique_ptr<GlobalParams> globalParams;
+#endif
+
 
 //------------------------------------------------------------------------
 
diff --git a/poppler/PDFDocEncoding.h b/poppler/PDFDocEncoding.h
index 01f3815..278a910 100644
--- a/poppler/PDFDocEncoding.h
+++ b/poppler/PDFDocEncoding.h
@@ -32,7 +32,11 @@
 
 class GooString;
 
-extern const Unicode POPPLER_PRIVATE_EXPORT pdfDocEncoding[256];
+#ifdef _COMPILING_POPPLER
+extern __declspec(dllexport) const Unicode pdfDocEncoding[256];
+#else
+extern __declspec(dllimport) const Unicode pdfDocEncoding[256];
+#endif
 
 char POPPLER_PRIVATE_EXPORT *pdfDocEncodingToUTF16(const std::string &orig, int *length);
 
